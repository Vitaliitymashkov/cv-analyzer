management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
spring.application.name=cv-analyzer
spring.ai.chat.client.observations.log-prompt=true
spring.ai.openai.base-url=https://api.groq.com/openai
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.options.temperature=0.7
spring.ai.openai.chat.options.model=gemma2-9b-it

# Prompt locations (can be overridden to external file paths like file:/etc/cv-analyzer/prompts/...)
# prompts.summary.system=classpath:prompts/summary/system.txt
# prompts.summary.user=classpath:prompts/summary/user.txt
# prompts.rating.system=classpath:prompts/rating/system.txt
# prompts.rating.user=classpath:prompts/rating/user.txt

# Admin basic auth (change in production or via env vars ADMIN_USERNAME/ADMIN_PASSWORD)
admin.username=${ADMIN_USERNAME:admin}
admin.password=${ADMIN_PASSWORD:admin}

# Groq Pricing Configuration (per 1M tokens)
openai.pricing.input-tokens-per-million=${OPENAI_PRICING_INPUT:0.59}
openai.pricing.output-tokens-per-million=${OPENAI_PRICING_OUTPUT:0.79}
openai.pricing.currency=${OPENAI_PRICING_CURRENCY:USD}

# Candidate Rating Configuration
candidate.rating.min=${CANDIDATE_RATING_MIN:1}
candidate.rating.max=${CANDIDATE_RATING_MAX:100}